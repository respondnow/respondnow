name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
      - release-*

env:
  REGISTRY: docker.io
  IMAGE_NAME: respondnow-portal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          # Extract the branch name from GITHUB_REF and handle fallback for tags
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [ "$BRANCH_NAME" == "$GITHUB_REF" ]; then
            BRANCH_NAME=${GITHUB_REF#refs/tags/}
          fi
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          
          # If branch name is empty, default to 'latest'
          IMAGE_TAG=${BRANCH_NAME:-latest}
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install and build with Yarn
        run: |
          cd portal && yarn install && yarn build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: imrajdas
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          cd portal
          docker build -t ${{ env.REGISTRY }}/imrajdas/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f Dockerfile .

      - name: Push Docker image to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-') }}
        run: |
          docker push ${{ env.REGISTRY }}/imrajdas/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Post success message
        run: echo "Docker image ${{ env.REGISTRY }}/imrajdas/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} successfully built and pushed to Docker Hub"
