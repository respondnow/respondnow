name: Build and Publish Docker Image - Server

on:
  push:
    branches:
      - main-java
      - main
      - release/*
      - develop
  release:
    types:
      - created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: respondnow-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            IMAGE_TAG=${{ github.event.release.tag_name }}
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            if [ "$BRANCH_NAME" == "$GITHUB_REF" ]; then
              BRANCH_NAME=${GITHUB_REF#refs/tags/}
            fi
            # Replace '/' with '-' in branch names for Docker tag compatibility
            IMAGE_TAG=$(echo "$BRANCH_NAME" | tr '/' '-')
            IMAGE_TAG=${IMAGE_TAG:-latest}
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create and Use Buildx Builder
        run: |
          docker buildx create --use --name mybuilder --driver docker-container
          docker buildx inspect --bootstrap

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        run: |
          cd server
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --push . -f src/main/docker/Dockerfile

      - name: Post success message
        if: |
          github.ref == 'refs/heads/main' ||
          startsWith(github.ref, 'refs/heads/release/') ||
          github.ref == 'refs/heads/develop' ||
          github.event_name == 'release'
        run: echo "Docker image ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} successfully built and pushed to GitHub Container Registry"
