/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useMutation, UseMutationOptions } from '@tanstack/react-query';

import type { UserSignupResponseDto } from '../schemas/UserSignupResponseDto';
import type { UtilsDefaultResponseDto } from '../schemas/UtilsDefaultResponseDto';
import type { UserAddUserInput } from '../schemas/UserAddUserInput';
import { fetcher, FetcherOptions } from '@services/fetcher';

export interface SignUpMutationQueryParams {
  correlationId?: string;
}

export type SignUpRequestBody = UserAddUserInput;

export type SignUpOkResponse = UserSignupResponseDto;

export type SignUpErrorResponse = UtilsDefaultResponseDto;

export interface SignUpProps extends Omit<FetcherOptions<SignUpMutationQueryParams, SignUpRequestBody>, 'url'> {
  queryParams: SignUpMutationQueryParams;
  body: SignUpRequestBody;
}

export function signUp(props: SignUpProps): Promise<SignUpOkResponse> {
  return fetcher<SignUpOkResponse, SignUpMutationQueryParams, SignUpRequestBody>({
    url: `/api/auth/signup`,
    method: 'POST',
    ...props
  });
}

export type SignUpMutationProps<T extends keyof SignUpProps> = Omit<SignUpProps, T> & Partial<Pick<SignUpProps, T>>;

/**
 * Signup to RespondNow
 */
export function useSignUpMutation<T extends keyof SignUpProps>(
  props: Pick<Partial<SignUpProps>, T>,
  options?: Omit<
    UseMutationOptions<SignUpOkResponse, SignUpErrorResponse, SignUpMutationProps<T>>,
    'mutationKey' | 'mutationFn'
  >
) {
  return useMutation<SignUpOkResponse, SignUpErrorResponse, SignUpMutationProps<T>>(
    (mutateProps: SignUpMutationProps<T>) => signUp({ ...props, ...mutateProps } as SignUpProps),
    options
  );
}
