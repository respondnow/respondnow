/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useMutation, UseMutationOptions } from '@tanstack/react-query';

import type { ChangePasswordResponseDto } from '../schemas/ChangePasswordResponseDto';
import type { ChangePasswordInput } from '../schemas/ChangePasswordInput';
import { fetcher, FetcherOptions } from '@services/fetcher';

export type ChangePasswordRequestBody = ChangePasswordInput;

export type ChangePasswordOkResponse = ChangePasswordResponseDto;

export type ChangePasswordErrorResponse = ChangePasswordResponseDto;

export interface ChangePasswordProps extends Omit<FetcherOptions<unknown, ChangePasswordRequestBody>, 'url'> {
  body: ChangePasswordRequestBody;
}

export function changePassword(props: ChangePasswordProps): Promise<ChangePasswordOkResponse> {
  return fetcher<ChangePasswordOkResponse, unknown, ChangePasswordRequestBody>({
    url: `/api/auth/changePassword`,
    method: 'POST',
    ...props
  });
}

export type ChangePasswordMutationProps<T extends keyof ChangePasswordProps> = Omit<ChangePasswordProps, T> &
  Partial<Pick<ChangePasswordProps, T>>;

/**
 * Change user password
 */
export function useChangePasswordMutation<T extends keyof ChangePasswordProps>(
  props: Pick<Partial<ChangePasswordProps>, T>,
  options?: Omit<
    UseMutationOptions<ChangePasswordOkResponse, ChangePasswordErrorResponse, ChangePasswordMutationProps<T>>,
    'mutationKey' | 'mutationFn'
  >
) {
  return useMutation<ChangePasswordOkResponse, ChangePasswordErrorResponse, ChangePasswordMutationProps<T>>(
    (mutateProps: ChangePasswordMutationProps<T>) =>
      changePassword({ ...props, ...mutateProps } as ChangePasswordProps),
    options
  );
}
