/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useMutation, UseMutationOptions } from '@tanstack/react-query';

import type { AuthChangePasswordResponseDto } from '../schemas/AuthChangePasswordResponseDto';
import type { UtilsDefaultResponseDto } from '../schemas/UtilsDefaultResponseDto';
import type { AuthChangeUserPasswordInput } from '../schemas/AuthChangeUserPasswordInput';
import { fetcher, FetcherOptions } from '@services/fetcher';

export interface ChangePasswordMutationQueryParams {
  correlationId?: string;
}

export type ChangePasswordRequestBody = AuthChangeUserPasswordInput;

export type ChangePasswordOkResponse = AuthChangePasswordResponseDto;

export type ChangePasswordErrorResponse = UtilsDefaultResponseDto;

export interface ChangePasswordProps
  extends Omit<FetcherOptions<ChangePasswordMutationQueryParams, ChangePasswordRequestBody>, 'url'> {
  queryParams: ChangePasswordMutationQueryParams;
  body: ChangePasswordRequestBody;
}

export function changePassword(props: ChangePasswordProps): Promise<ChangePasswordOkResponse> {
  return fetcher<ChangePasswordOkResponse, ChangePasswordMutationQueryParams, ChangePasswordRequestBody>({
    url: `/auth/auth/changePassword`,
    method: 'POST',
    ...props
  });
}

export type ChangePasswordMutationProps<T extends keyof ChangePasswordProps> = Omit<ChangePasswordProps, T> &
  Partial<Pick<ChangePasswordProps, T>>;

/**
 * ChangePassword of RespondNow
 */
export function useChangePasswordMutation<T extends keyof ChangePasswordProps>(
  props: Pick<Partial<ChangePasswordProps>, T>,
  options?: Omit<
    UseMutationOptions<ChangePasswordOkResponse, ChangePasswordErrorResponse, ChangePasswordMutationProps<T>>,
    'mutationKey' | 'mutationFn'
  >
) {
  return useMutation<ChangePasswordOkResponse, ChangePasswordErrorResponse, ChangePasswordMutationProps<T>>(
    (mutateProps: ChangePasswordMutationProps<T>) =>
      changePassword({ ...props, ...mutateProps } as ChangePasswordProps),
    options
  );
}
