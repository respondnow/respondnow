/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query';

import type { GetUserMappingResponseDto } from '../schemas/GetUserMappingResponseDto';
import { fetcher, FetcherOptions } from '@services/fetcher';

export interface GetUserMappingsQueryQueryParams {
  correlationId?: string;
  userId: string;
}

export type GetUserMappingsOkResponse = GetUserMappingResponseDto;

export type GetUserMappingsErrorResponse = GetUserMappingResponseDto;

export interface GetUserMappingsProps extends Omit<FetcherOptions<GetUserMappingsQueryQueryParams, unknown>, 'url'> {
  queryParams: GetUserMappingsQueryQueryParams;
}

export function getUserMappings(props: GetUserMappingsProps): Promise<GetUserMappingsOkResponse> {
  return fetcher<GetUserMappingsOkResponse, GetUserMappingsQueryQueryParams, unknown>({
    url: `/api/auth/userMapping`,
    method: 'GET',
    ...props
  });
}

/**
 * Get User Mappings
 */
export function useGetUserMappingsQuery(
  props: GetUserMappingsProps,
  options?: Omit<UseQueryOptions<GetUserMappingsOkResponse, GetUserMappingsErrorResponse>, 'queryKey' | 'queryFn'>
) {
  return useQuery<GetUserMappingsOkResponse, GetUserMappingsErrorResponse>(
    ['getUserMappings', props.queryParams],
    ({ signal }) => getUserMappings({ ...props, signal }),
    options
  );
}
