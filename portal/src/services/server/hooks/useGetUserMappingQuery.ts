/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query';

import type { UserGetUserMappingResponseDto } from '../schemas/UserGetUserMappingResponseDto';
import type { UtilsDefaultResponseDto } from '../schemas/UtilsDefaultResponseDto';
import { fetcher, FetcherOptions } from '@services/fetcher';

export interface GetUserMappingQueryQueryParams {
  correlationId?: string;
  userId?: string;
}

export interface GetUserMappingQueryHeaderParams {
  Authorization: string;
}

export type GetUserMappingOkResponse = UserGetUserMappingResponseDto;

export type GetUserMappingErrorResponse = UtilsDefaultResponseDto;

export interface GetUserMappingProps
  extends Omit<FetcherOptions<GetUserMappingQueryQueryParams, GetUserMappingQueryHeaderParams>, 'url'> {
  queryParams: GetUserMappingQueryQueryParams;
}

export function getUserMapping(props: GetUserMappingProps): Promise<GetUserMappingOkResponse> {
  return fetcher<GetUserMappingOkResponse, GetUserMappingQueryQueryParams, GetUserMappingQueryHeaderParams>({
    url: `/api/auth/userMapping`,
    method: 'GET',
    ...props
  });
}

/**
 * GetUserMapping of RespondNow
 */
export function useGetUserMappingQuery(
  props: GetUserMappingProps,
  options?: Omit<UseQueryOptions<GetUserMappingOkResponse, GetUserMappingErrorResponse>, 'queryKey' | 'queryFn'>
) {
  return useQuery<GetUserMappingOkResponse, GetUserMappingErrorResponse>(
    ['GetUserMapping', props.queryParams],
    ({ signal }) => getUserMapping({ ...props, signal }),
    options
  );
}
