/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query';

import type { IncidentGetResponseDto } from '../schemas/IncidentGetResponseDto';
import type { UtilsDefaultResponseDto } from '../schemas/UtilsDefaultResponseDto';
import { fetcher, FetcherOptions } from '@services/fetcher';

export interface GetIncidentQueryPathParams {
  incidentIdentifier: string;
}

export interface GetIncidentQueryQueryParams {
  accountIdentifier: string;
  orgIdentifier?: string;
  projectIdentifier?: string;
}

export type GetIncidentOkResponse = IncidentGetResponseDto;

export type GetIncidentErrorResponse = UtilsDefaultResponseDto;

export interface GetIncidentProps
  extends GetIncidentQueryPathParams,
    Omit<FetcherOptions<GetIncidentQueryQueryParams, unknown>, 'url'> {
  queryParams: GetIncidentQueryQueryParams;
}

export function getIncident(props: GetIncidentProps): Promise<GetIncidentOkResponse> {
  return fetcher<GetIncidentOkResponse, GetIncidentQueryQueryParams, unknown>({
    url: `/api/incident/${props.incidentIdentifier}`,
    method: 'GET',
    ...props
  });
}

/**
 * Get incident
 */
export function useGetIncidentQuery(
  props: GetIncidentProps,
  options?: Omit<UseQueryOptions<GetIncidentOkResponse, GetIncidentErrorResponse>, 'queryKey' | 'queryFn'>
) {
  return useQuery<GetIncidentOkResponse, GetIncidentErrorResponse>(
    ['GetIncident', props.incidentIdentifier, props.queryParams],
    ({ signal }) => getIncident({ ...props, signal }),
    options
  );
}
