/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useMutation, UseMutationOptions } from '@tanstack/react-query';

import type { UserLoginResponseDto } from '../schemas/UserLoginResponseDto';
import type { UtilsDefaultResponseDto } from '../schemas/UtilsDefaultResponseDto';
import type { UserLoginUserInput } from '../schemas/UserLoginUserInput';
import { fetcher, FetcherOptions } from '@services/fetcher';

export interface LoginMutationQueryParams {
  correlationId?: string;
}

export type LoginRequestBody = UserLoginUserInput;

export type LoginOkResponse = UserLoginResponseDto;

export type LoginErrorResponse = UtilsDefaultResponseDto;

export interface LoginProps extends Omit<FetcherOptions<LoginMutationQueryParams, LoginRequestBody>, 'url'> {
  queryParams: LoginMutationQueryParams;
  body: LoginRequestBody;
}

export function login(props: LoginProps): Promise<LoginOkResponse> {
  return fetcher<LoginOkResponse, LoginMutationQueryParams, LoginRequestBody>({
    url: `/api/auth/login`,
    method: 'POST',
    ...props
  });
}

export type LoginMutationProps<T extends keyof LoginProps> = Omit<LoginProps, T> & Partial<Pick<LoginProps, T>>;

/**
 * Login to RespondNow
 */
export function useLoginMutation<T extends keyof LoginProps>(
  props: Pick<Partial<LoginProps>, T>,
  options?: Omit<
    UseMutationOptions<LoginOkResponse, LoginErrorResponse, LoginMutationProps<T>>,
    'mutationKey' | 'mutationFn'
  >
) {
  return useMutation<LoginOkResponse, LoginErrorResponse, LoginMutationProps<T>>(
    (mutateProps: LoginMutationProps<T>) => login({ ...props, ...mutateProps } as LoginProps),
    options
  );
}
